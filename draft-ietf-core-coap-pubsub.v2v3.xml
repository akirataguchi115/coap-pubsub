<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.26 (Ruby 2.6.10) -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-core-coap-pubsub-12" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.16.0 -->
  <front>
    <title abbrev="COREPUBSUB">A publish-subscribe architecture for the Constrained Application Protocol (CoAP)</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-core-coap-pubsub-12"/>
    <author initials="M." surname="Koster" fullname="Michael Koster">
      <organization>Unaffiliated</organization>
      <address>
        <email>michaeljohnkoster@gmail.com</email>
      </address>
    </author>
    <author initials="A." surname="Keranen" fullname="Ari Keranen">
      <organization>Ericsson</organization>
      <address>
        <email>ari.keranen@ericsson.com</email>
      </address>
    </author>
    <author initials="J." surname="Jimenez" fullname="Jaime Jimenez">
      <organization>Ericsson</organization>
      <address>
        <email>jaime@iki.fi</email>
      </address>
    </author>
    <date year="2023" month="March" day="13"/>
    <area>Applications</area>
    <workgroup>CoRE</workgroup>
    <abstract>
      <t>This document describes a publish-subscribe architecture for CoAP that
extends the capabilities of CoAP for supporting nodes with long breaks in
connectivity and/or up-time. The Constrained Application Protocol (CoAP) is used by CoAP clients both to publish and to subscribe via a known topic resource.</t>
    </abstract>
    <note removeInRFC="true">
      <name>About This Document</name>
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-core-coap-pubsub/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        core Working Group mailing list (<eref target="mailto:core@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/core/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/core/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/core-wg/coap-pubsub"/>.</t>
    </note>
  </front>
  <middle>
    <section anchor="introduction">
      <name>Introduction</name>
      <t>The Constrained Application Protocol (CoAP) <xref target="RFC7252"/> supports
machine-to-machine communication across networks of constrained
devices and constrained networks. CoAP uses a request/response model where clients make requests to servers in order to request actions on resources. Depending on the situation the same device may act either as a server, a client, or both.</t>
      <t>One important class of constrained devices includes devices that are intended to run for years from a small battery, or by scavenging energy from their environment. These devices have limited reachability because they spend most of their time in a sleeping state with no network connectivity. Another important class of nodes are devices with limited reachability due to middle-boxes like Network Address Translators (NATs) and firewalls.</t>
      <t>For these nodes, the client/server-oriented architecture of REST can be challenging when interactions are not initiated by the devices themselves. A publish/subscribe-oriented architecture where nodes are separated by a broker and data is exchanged via topics might fit these nodes better.</t>
      <t>This document applies the idea of publish-subscribe to Constrained RESTful Environments. It introduces a broker that allows to create, discover subscribe and publish on topics. The broker enables store-and-forward data exchange between CoAP endpoints, thereby facilitating the communication of nodes with limited reachability, providing simple many-to-many communication, and easing integration with other publish/subscribe systems.</t>
      <section anchor="terminology">
        <name>Terminology</name>
        <t>This specification requires readers to be familiar with all the terms and
concepts that are discussed in <xref target="RFC5988"/> and <xref target="RFC6690"/>. Readers
should also be familiar with the terms and concepts discussed in
<xref target="RFC7252"/> and <xref target="RFC9167"/>. The URI template
format <xref target="RFC6570"/> is used to describe the REST API defined in
this specification.</t>
        <t>This specification makes use of the following terminology:</t>
        <dl>
          <dt>publish-subscribe (pub/sub):</dt>
          <dd>
            <t>A messaging paradigm in which messages are published to a broker, and potential receivers can subscribe to a broker to receive messages. Message producers do not need to know where the message will be eventually sent. The broker matches publications and subscriptions, and delivers publications to subscribed receivers.</t>
          </dd>
          <dt>publishers and subscribers:</dt>
          <dd>
            <t>CoAP clients can act as publishers or as subscribers. Publishers propose topics for creation and send CoAP messages (publications) to the broker on specific topics. Subscribers have an ongoing observation relation (subscription) to a topic. Publishers and subscribers do not need to have any knowledge of each other, but they must know the topic they are publishing and subscribing to.</t>
          </dd>
          <dt>topic collection:</dt>
          <dd>
            <t>A resource collection is a group of related resources that share a common base URI. In this case the the topic collection contains resources of the type "topic resource". CoAP clients can discover and interact with the resources in a collection by sending CoAP requests to the URI of the collection.</t>
          </dd>
          <dt>topic resource:</dt>
          <dd>
            <t>An entry within a topic collection in a broker. Topics are created and configured before any data can be published.  CoAP clients can propose new topics to be created, but it is up to the broker to decide whether and how a topic is created. The broker also decides the URI of each topic resource and of the topic-data resource when hosted at the broker. The creation, configuration, and discovery of topics at a broker are specified in <xref target="topics"/>. Interactions about the topic-data are defined in <xref target="topic-data-interactions"/>.</t>
          </dd>
          <dt>topic-data resource:</dt>
          <dd>
            <t>Topic resources contain a property called "topic-data". The topic-data resource is a CoAP URI used by publishers and subscribers to publish (PUT) and subscribe (GET with Observe) to data (see <xref target="topics"/>).</t>
          </dd>
          <dt>broker:</dt>
          <dd>
            <t>A CoAP server that hosts one or more topic collections containing topic resources. The broker is responsible for the store-and-forward of state update representations when the topic-data URI points to a resource hosted on the broker. The broker is also responsible of handling the topic lifecycle as defined in <xref target="topic-lifecycle"/>. The creation, configuration, and discovery of topics at a broker is specified in <xref target="topics"/>.</t>
          </dd>
        </dl>
        <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      </section>
      <section anchor="coap-publish-subscribe-architecture">
        <name>CoAP Publish-Subscribe Architecture</name>
        <t><xref target="fig-arch"/> shows a simple Publish/Subscribe architecture over CoAP. In it, publishers submit their data over a RESTful interface to a broker-managed resource (topic) and subscribers observe this resource using <xref target="RFC7641"/>. Resource state information is updated between the CoAP clients and the broker via topics. Topics are created by the broker but the initial configuration can be proposed by a client, normally a publisher.</t>
        <t>The broker is responsible for the store-and-forward of state update representations between CoAP clients. Subscribers observing a resource will receive notifications, the delivery of which is done on a best-effort basis.</t>
        <figure anchor="fig-arch">
          <name>Publish-subscribe architecture over CoAP</name>
          <artwork align="center"><![CDATA[
      CoAP                     CoAP                      CoAP
     clients                  server                   clients
   ___________              __________    observe   ____________
  |           |  publish   |          | .--------- |            |
  | publisher | ---------> |          | |--------> | subscriber |
  |___________|            |          | '--------> |____________|
        .                  |          |                   .
        .                  |  broker  |                   .
   ___________             |          |   observe   ____________
  |           |  publish   |          | .--------- |            |
  | publisher | ---------> |          | |--------> | subscriber |
  |___________|            |__________| '--------> |____________|
]]></artwork>
        </figure>
        <t>This document describes two sets of interactions, interactions to configure topics and their lifecycle (see <xref target="topic-resource-interactions"/>) and interactions about the topic data (see <xref target="topic-data-interactions"/>).</t>
        <t>Topic resource interactions are discovery, create, read configuration, update configuration, delete configuration and handle the management of the topics.</t>
        <t>Topic data interactions are publish, subscribe, unsubscribe, read and are oriented on how data is transferred from a publisher to a subscriber.</t>
      </section>
      <section anchor="managing-topics">
        <name>Managing Topics</name>
        <t><xref target="fig-api"/> shows the resources of a Topic Collection that can be managed at the Broker.</t>
        <figure anchor="fig-api">
          <name>Resources of a Broker</name>
          <artwork align="center"><![CDATA[
             ___
   Topic    /   \
 Collection \___/
  Resource       \
                  \____________________
                   \___    \___        \___
                   /   \   /   \  ...  /   \        Topic
                   \___/   \___/       \___/      Resources
]]></artwork>
        </figure>
        <t>The Broker exports a topic-collection resource, with resource type "core.ps.coll" defined in <xref target="iana"/> of this document. The interfaces for the topic-collection resource is defined in <xref target="topic-collection-interactions"/>.</t>
      </section>
    </section>
    <section anchor="topics">
      <name>Pub-Sub Topics</name>
      <t>The configuration side of a "publish/subscribe broker" consists of a collection of topics. These topics as well as the collection itself are exposed by a CoAP server as resources (see <xref target="fig-topic"/>). Each topic has a topic and a topic data resources. The topic resource is used by a client creating or administering a topic. The topic data resource is used by the publishers and the subscribers to a topic.</t>
      <figure anchor="fig-topic">
        <name>Topic and topic-data resources of a topic</name>
        <artwork align="center"><![CDATA[
              ___
    Topic    /   \
  Collection \___/
   Resource       \
                   \___________________________
                    \          \               \
                     \ ......   \ ......        \ ......
                    : \___  :  : \___  :       : \___  :
             Topic  : / + \ :  : / + \ :       : / + \ :
          Resource  : \_|_/ :  : \_|_/ :       : \_|_/ :
                    ....|....  ....|....       ....|....
                    ....|....  ....|....       ....|....
             Topic  :  _|_  :  :  _|_  :  ...  :  _|_  :
              Data  : /   \ :  : /   \ :       : /   \ :
          Resource  : \___/ :  : \___/ :       : \___/ :
                    :.......:  :.......:       :.......:
                   \_________/\_________/ ... \_________/
                     topic 1    topic 2         topic n
]]></artwork>
      </figure>
      <section anchor="collection-representation">
        <name>Collection Representation</name>
        <t>Each topic resource is represented as a link, where the link target is the URI of the topic resource.</t>
        <t>Each topic-data is represented as a link, where the link target is the URI of the topic-data resource. A topic-data link is an entry within the topic resource called 'topic_data' (see <xref target="topic-properties"/>).</t>
        <t>The list can be represented as a Link Format document <xref target="RFC6690"/>. The link to each topic resource specifies the link target attribute 'rt' (Resource Type), with value "core.pubsub.conf" defined in this document.</t>
      </section>
      <section anchor="topic-creation-and-configuration">
        <name>Topic Creation and Configuration</name>
        <t>A CoAP client can create a new topic by submitting an initial configuration for the topic (see <xref target="topic-create"/>). It can also read and update the configuration of existing topics and delete them when they are no longer needed (see <xref target="topic-resource-interactions"/>).</t>
        <t>The configuration of a topic itself consists of a set of properties that can be set by a client or by the broker.</t>
        <section anchor="topic-properties">
          <name>Topic Properties</name>
          <t>The CBOR map includes the following configuration parameters, whose CBOR abbreviations are defined in <xref target="pubsub-parameters"/> of this document.</t>
          <ul spacing="normal">
            <li>'topic_name': A required field used as an application identifier. It encodes the topic name as a CBOR text string. Examples of topic names include human-readable strings (e.g., "room2"), UUIDs, or other values.</li>
            <li>'topic_data': A required field containing the CoAP URI of the topic data resource for subscribing to a pubsub topic. It encodes the URI as a CBOR text string.</li>
            <li>'resource_type': A required field used to indicate the resource type associated with topic resources. It encodes the resource type as a CBOR text string. The value should be "core.ps.conf".</li>
            <li>'media_type': An optional field used to indicate the media type of the topic data resource. It encodes the media type as a CBOR text string (e.g.,"application/json").</li>
            <li>'target_attribute': An optional field used to indicate the attribute or property of the topic_data resource. It encodes the attribute as a CBOR text string. Example attributes include "temperature".</li>
            <li>'expiration_date': An optional field used to indicate the expiration date of the topic. It encodes the expiration date as a CBOR text string. The value should be a date string in ISO 8601 format (e.g., "2023-03-31T23:59:59Z"). The pubsub system can use this field to automatically remove topics that are no longer valid.</li>
            <li>'max_subscribers': An optional field used to indicate the maximum number of subscribers allowed for the topic. It encodes the maximum number as a CBOR integer. If this field is not present, there is no limit to the number of subscribers allowed. The pubsub system can use this field to limit the number of subscribers for a topic.</li>
          </ul>
        </section>
        <section anchor="topic-resource-representation">
          <name>Topic Resource Representation</name>
          <t>A topic is represented as a CBOR map containing the configuration properties of the topic as top-level elements.</t>
          <t>Unless specified otherwise, these are defined in this document and their CBOR abbreviations are defined in <xref target="pubsub-parameters"/>.</t>
          <section anchor="default-values">
            <name>Default Values</name>
            <t>Below are the defined default values for the topic parameters:</t>
            <ul spacing="normal">
              <li>'topic_name': There is no default value. This field is required and must be specified by the client or broker.</li>
              <li>'topic_data': There is no default value. This field is required and must be specified by the client or broker.</li>
              <li>'resource_type': The default value is "core.ps.conf".</li>
              <li>'media_type': The default value is an empty string, indicating that no media type is specified.</li>
              <li>'target_attribute': The default value is an empty string, indicating that no attribute is specified.</li>
              <li>'expiration_date': The default value is an empty string, indicating that no expiration date is specified. If this field is not present, the topic will not expire automatically.</li>
              <li>'max_subscribers': The default value is -1, indicating that there is no limit to the number of subscribers allowed. If this field is not present, the pubsub system will not limit the number of subscribers for the topic.</li>
            </ul>
          </section>
        </section>
      </section>
      <section anchor="discovery">
        <name>Discovery</name>
        <t>Discovery involves that of the Broker, topic collections, topic resources and topic data.</t>
        <section anchor="broker-discovery">
          <name>Broker Discovery</name>
          <!-- TBD: This section explains Broker Discovery, needs more work -->

<t>CoAP clients <bcp14>MAY</bcp14> discover brokers by using CoAP Simple Discovery, via multicast, through a Resource Directory (RD) <xref target="RFC9167"/> or by other means specified in extensions to <xref target="RFC7252"/>. Brokers <bcp14>MAY</bcp14> register with a RD by following the steps on Section 5 of <xref target="RFC9167"/> with the resource type set to "core.ps" as defined in <xref target="iana"/> of this document.</t>
          <t>Brokers <bcp14>SHOULD</bcp14> expose a link to the entry point of the pubsub API at their .well-known/core location <xref target="RFC6690"/>. The specific resource path is left for implementations, examples in this document may use the "/ps" path.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> GET
   Uri-Path: ./well-known/core
   Resource-Type: core.ps


<= 2.05 Content
    </ps>;rt=core.ps;ct=40
]]></artwork>
        </section>
        <section anchor="topic-discovery">
          <name>Topic Discovery</name>
          <t>A Broker can offer a topic discovery entry point to enable clients to find topics of interest. The resource entry point thus represents a collection of related resources as specified in <xref target="RFC6690"/> and is identified by the resource type "core.ps.coll".</t>
          <t>The interactions with topic collections are further defined in <xref target="topic-collection-interactions"/>.</t>
          <t>A topic collection is a group of topic resources that define the properties of the topics themselves (see Section <xref target="topic-resource-representation"/>). Each topic resource is represented as a link to its corresponding resource URI. The list can be represented as a Link Format document <xref target="RFC6690"/>. Topic resources are identified by the resource type "core.ps.conf".</t>
          <t>Within each topic resource there is a set of configuration properties (see Section <xref target="topic-properties"/>). The 'topic_data' property contains the URI of the topic data resource that a CoAP client can subscribe to. Resources exposing resources of the topic data type are expected to use the resource type 'core.ps.data'.</t>
        </section>
      </section>
      <section anchor="topic-collection-interactions">
        <name>Topic Collection Interactions</name>
        <t>These are the interactions that can happen at the topic collection level.</t>
        <section anchor="topic-get-all">
          <name>Retrieving all topics</name>
          <!--
GET to /topic-collection
retrieve all topics
response is link format
-->

<t>A client can request a collection of the topics present in the broker by making a GET request to the collection URI.</t>
          <t>On success, the server returns a 2.05 (Content) response with a representation of the list of all topic resources (see Section <xref target="topic-resource-representation"/>) in the collection.</t>
          <t>Depending on the permission set each client <bcp14>MAY</bcp14> receive a different list of topics that they are authorized to read.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.01 GET
   Uri-Path: ps
   Uri-Path: tc

<= 2.05 Content
   Content-Format: 40 (application/link-format)
   </ps/tc/temperature>;rt="core.ps.conf",
   </ps/tc/humidity>;rt="core.ps.conf"
]]></artwork>
        </section>
        <section anchor="topic-get-properties">
          <name>Getting Topics by Properties</name>
          <!--
FETCH to /topic-collection with filter
retrieve only the topics that match the filter
request is cbor
response is link format
-->

<t>A client can filter a collection of topics by submitting the
representation of a topic filter (see Section <xref target="topic-fetch-resource"/>)  in a FETCH request to the topic collection URI.</t>
          <t>On success, the server returns a 2.05 (Content) response with a
representation of a list of topics in the collection (see
Section <xref target="topic-discovery"/>) that match the filter in CoRE link format <xref target="RFC6690"/>.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.05 FETCH
   Uri-Path: ps
   Uri-Path: tc
   Content-Format: TBD (application/pubsub+cbor)

   {
     "resource_type" : "core.ps.conf",
     "target_attribute" : "temperature"
   }

<= 2.05 Content
   Content-Format: 40 (application/link-format)
   </living_room_sensor>;anchor="coap://[2001:db8::2]/ps/tc/h9392",
   </kitchen_sensor>;anchor="coap://[2001:db8::2]/ps/tc/f3192"

]]></artwork>
        </section>
        <section anchor="topic-create">
          <name>Creating a Topic</name>
          <!--
POST to /topic-collection
create new topic
request is cbor
response (created) is cbor including the link to new topic-config resource
creator proposes topic name but broker approves
-->

<t>A client can add a new topic to a collection of topics by submitting a representation of the initial topic resource (see Section <xref target="topic-resource-representation"/>) in a POST request to the topic collection URI.</t>
          <t>On success, the server returns a 2.01 (Created) response indicating the topic URI of the new topic and the current representation of the topic resource.</t>
          <t>If a topic manager is present in the broker, the topic creation  may require manager approval subject to certain conditions. If the conditions are not fulfilled, the manager <bcp14>MUST</bcp14> respond with a 4.03 (Forbidden) error. The response <bcp14>MUST</bcp14> have Content-Format set to "application/core-pubsub+cbor".</t>
          <t>The broker <bcp14>MUST</bcp14> respond with a 4.00 (Bad Request) error if any received parameter is specified multiple times, invalid or not recognized.</t>
          <t>A CoAP endpoint creating a topic may specify a 'topic_data' URI different than that used by the broker. The broker may then simply forward the observation requests to the 'topic_data' URI.</t>
          <t>If the 'topic_data' is empty the broker will assign a resource for a publisher to publish to.</t>
          <artwork><![CDATA[
=> 0.02 POST
   Uri-Path: ps
   Uri-Path: tc
   Content-Format: TBD2 (application/core-pubsub+cbor)
   TBD (this should be a CBOR map with the mandatory parameters)
   {
     "topic_name" : "living_room_sensor"
     "resource_type" : "core.ps.conf"
   }

<= 2.01 Created
   Location-Path: ps/h9392
   Content-Format: TBD2 (application/core-pubsub+cbor)

   TBD (this should be a CBOR map)
   {
     "topic_name" : "living_room_sensor",
     "topic_data" : "coap://[2001:db8::2]/ps/data/6578616d706c65"
     "resource_type" : "core.ps.conf"
   }
]]></artwork>
        </section>
      </section>
      <section anchor="topic-resource-interactions">
        <name>Topic Resource Interactions</name>
        <t>These are the interactions that can happen at the topic resource level.</t>
        <section anchor="topic-get-resource">
          <name>Getting a topic resource</name>
          <!--
GET to /topic-config
retrieve a topic configuration
response is cbor
-->

<t>A client can read the configuration of a topic by making a GET request to the topic resource URI.</t>
          <t>On success, the server returns a 2.05 (Content) response with a representation of the topic resource. The response has as payload the representation of the topic resource as specified in <xref target="topic-resource-representation"/>.</t>
          <t>If a topic manager (TBD) is present in the broker, retrieving topic information may require manager approval subject to certain conditions (TBD). If the conditions are not fulfilled, the manager <bcp14>MUST</bcp14> respond with a 4.03 (Forbidden) error. The response <bcp14>MUST</bcp14> have Content-Format set to "application/core-pubsub+cbor".</t>
          <t>The response payload is a CBOR map, whose possible entries are specified in <xref target="topic-resource-representation"/> and use the same abbreviations defined in <xref target="pubsub-parameters"/>.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.01 GET
   Uri-Path: ps
   Uri-Path: tc
   Uri-Path: h9392

<= 2.05 Content
   Content-Format: TBD2 (application/core-pubsub+cbor)
   {
      "topic_name" : "living_room_sensor",
      "topic_data" : "coap://[2001:db8::2]/ps/data/6578616d706c65",
      "resource_type": "core.ps.conf",
      "media_type": "application/senml-cbor",
      "target_attribute": "temperature",
      "expiration_date": "",
      "max_subscribers": -1
   }

]]></artwork>
        </section>
        <section anchor="topic-fetch-resource">
          <name>Getting part of a topic resource by filter</name>
          <!--
FETCH to /topic-conf with filter
retrieve only certain parameters from the configuration
request is cbor
response is cbor
-->

<t>A client can read the configuration of a topic by making a FETCH request to the topic resource URI with a filter for specific parameters. This is done in order to retrieve part of the current topic resource.</t>
          <t>The request contains a CBOR map with a configuration filter or 'conf_filter', a CBOR array with CBOR abbreviation. Each element of the array specifies one requested configuration parameter of the current topic resource (see <xref target="topic-resource-representation"/>).</t>
          <t>On success, the server returns a 2.05 (Content) response with a representation of the topic resource. The response has as payload the partial representation of the topic resource as specified in <xref target="topic-resource-representation"/>.</t>
          <t>If a topic manager (TBD) is present in the broker, retrieving topic information may require manager approval subject to certain conditions (TBD). If the conditions are not fulfilled, the manager <bcp14>MUST</bcp14> respond with a 4.03 (Forbidden) error.</t>
          <t>The response payload is a CBOR map, whose possible entries are specified in <xref target="topic-resource-representation"/> and use the same abbreviations defined in <xref target="pubsub-parameters"/>.</t>
          <t>Both request and response <bcp14>MUST</bcp14> have Content-Format set to "application/core-pubsub+cbor".</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.05 FETCH
   Uri-Path: ps
   Uri-Path: tc
   Uri-Path: h9392
   Content-Format: TBD2 (application/core-pubsub+cbor)
   {
     "conf_filter" : [topic_data, media_type]
   }

<= 2.05 Content
   Content-Format: TBD2 (application/core-pubsub+cbor)
   {
     "topic_data" : "coap://[2001:db8::2]/ps/data/6578616d706c65",
     "media_type": "application/senml-cbor"
   }

]]></artwork>
        </section>
        <section anchor="topic-update-resource">
          <name>Updating the Topic Resource</name>
          <!--
PUT to /topic-conf
override the whole configuration
request is cbor
response is cbor
-->

<t>A client can update the configuration of a topic by submitting the representation of the updated topic  (see Section 3.1.3) in a PUT or POST request to the topic URI. Any existing properties in the configuration are overwritten by this update.</t>
          <t>On success, the server returns a 2.04 (Changed) response and the current full resource representation. The broker may chose not to overwrite parameters that are not explicitly modified in the request.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.03 PUT
   Uri-Path: ps
   Uri-Path: tc
   Uri-Path: h9392
   Content-Format: TBD2 (application/core-pubsub+cbor)

   {
      "topic_name" : "living_room_sensor",
      "topic_data" : "coap://[2001:db8::2]/ps/data/6578616d706c65",
      "target_attribute": "temperature",
      "expiration_date": "2023-04-28T23:59:59Z",
      "max_subscribers": 2
   }

<= 2.04 Changed
   Content-Format: TBD2 (application/core-pubsub+cbor)

   TBD (this should be a CBOR map)
   {
      "topic_name" : "living_room_sensor",
      "topic_data" : "coap://[2001:db8::2]/ps/data/6578616d706c65",
      "resource_type": "core.ps.conf",
      "media_type": "application/senml-cbor",
      "target_attribute": "temperature",
      "expiration_date": "2023-04-28T23:59:59Z",
      "max_subscribers": 2
   }
]]></artwork>
        </section>
        <section anchor="topic-delete">
          <name>Deleting a Topic Resource</name>
          <t>A client can delete a topic by making a CoAP DELETE request on the topic resource URI.</t>
          <t>On success, the server returns a 2.02 (Deleted) response.</t>
          <t>When a topic resource is deleted, the broker <bcp14>SHOULD</bcp14> also delete the topic data resource, unsubscribe all subscribers by removing them from the list of observers and returning a final 4.04 (Not Found) response as per <xref target="RFC7641"/> Section 3.2.
Example:</t>
          <artwork><![CDATA[
=> 0.04 DELETE
   Uri-Path: ps
   Uri-Path: tc
   Uri-Path: h9392

<= 2.02 Deleted
]]></artwork>
        </section>
      </section>
      <section anchor="pubsub">
        <name>Publish/Subscribe</name>
        <t>Unless a topic is configured to use a different mechanism, publish/ subscribe is performed as follows: A publisher publishes to a topic by submitting the data in a PUT request to a broker-managed "topic data resource".  This causes a change to the state of that resources. Any subscriber observing the resource <xref target="RFC7641"/> at that time receives a notification about the change to the resource state. Observations are maintained and terminated as specified in <xref target="RFC7641"/>.</t>
        <t>As shown in <xref target="topics"/>, each topic contains two resources: topic resource and topic data. In that section we explained the creation and configuration of the topic resources. This section will explain the management of topic data resources.</t>
        <t>A topic data resource does not exist until some initial data has been published to it.  Before initial data has been published, the topic data resource yields a 4.04 (Not Found) response. If such a "half created" topic is undesired, the creator of the topic can simply immediately publish some initial placeholder data to make the topic "fully created".</t>
        <t>URIs for topic resources are broker-generated. URIs for topic-data <bcp14>MAY</bcp14> also be broker-generated or client-generated. There does not need to be any URI pattern dependence between the URI where the data exists and the URI of the topic resource. Topic resource and data resources might even be hosted on different servers.</t>
        <section anchor="topic-lifecycle">
          <name>Topic Lifecycle</name>
          <t>When a topic is newly created, it is first placed by the server into the HALF CREATED state (see <xref target="fig-life"/>).  In this state, a client can read and update the configuration of the topic and delete the topic. A publisher can publish to the topic data resource.  However, a subscriber cannot yet observe the topic data resource nor read the latest data.</t>
          <figure anchor="fig-life">
            <name>Lifecycle of a Topic</name>
            <artwork align="center"><![CDATA[
                HALF                       FULLY
              CREATED       Delete        CREATED
                ___       Topic Data        ___     Publish
------------>  |   |  <------------------  |   |  ------------.
    Create     |___|  ------------------>  |___|  <-----------'
                     \      Publish      /         Subscribe
                | ^   \       ___       /   | ^
          Read/ | |    '-->  |   |  <--'    | | Read/
         Update | |  Delete  |___|  Delete  | | Update
                '-'  Topic          Topic   '-'
                            DELETED
]]></artwork>
          </figure>
          <t>After a publisher publishes to the topic for the first time, the topic is placed into the FULLY CREATED state. In this state, a client can read, update and delete the topic; a publisher can publish to the topic data resource; and a subscriber can observe the topic data resource.</t>
          <t>When a client deletes a topic resource, the topic is placed into the DELETED state and shortly after removed from the server. In this state, all subscribers are removed from the list of observers of the topic data resource and no further interactions with the topic are possible.</t>
          <t>When a client deletes a topic data, the topic is placed into the HALF CREATED state, where clients can read, update and delete the topic and awaits for a publisher to begin publication.</t>
        </section>
        <section anchor="rate-limit">
          <name>Rate Limiting</name>
          <t>The server hosting a data resource may have to handle a potentially very large number of publishers and subscribers at the same time. This means the server can easily become overwhelmed if it receives too many publications in a short period of time.</t>
          <t>In this situation, if a client is sending publications too fast, the server <bcp14>SHOULD</bcp14> return a 4.29 (Too Many Requests) response <xref target="RFC8516"/>.  As described in <xref target="RFC8516"/>, the Max-Age option <xref target="RFC7252"/> in this response indicates the number of seconds after which the client may retry. The Broker <bcp14>MAY</bcp14> stop publishing messages from the client for the indicated time.</t>
          <t>When a client receives a 4.29 (Too Many Requests) response, it <bcp14>MUST NOT</bcp14> send any new publication requests to the same topic data resource before the time indicated by the Max-Age option has passed.</t>
        </section>
      </section>
      <section anchor="topic-data-interactions">
        <name>Topic Data Interactions</name>
        <t>TBD: intro and image that shows a topic data URI hosted in a different endpoint than the broker</t>
        <section anchor="publish">
          <name>Publish</name>
          <t>A topic must have been created in order to publish data to it (See Section <xref target="topic-create"/>) and be in the half-created state in order to the publish operation to work (see <xref target="topic-lifecycle"/>).</t>
          <t>A client can publish data to a topic by submitting the data in a PUT request to the 'topic_data' URI as indicated in its topic resource property. Please note that the 'topic_data' URI is not the same as the topic URI used for configuring the topic (see <xref target="topic-resource-representation"/>).</t>
          <t>On success, the server returns a 2.04 (Updated) response. However, when data is published to the topic for the first time, the server instead <bcp14>MUST</bcp14> return a 2.01 (Created) response and set the topic in the fully-created state (see <xref target="topic-lifecycle"/>).</t>
          <t>If the request does not have an acceptable content format, the server returns a 4.15 (Unsupported Content Format) response.</t>
          <t>If the client is sending publications too fast, the server returns a
4.29 (Too Many Requests) response <xref target="RFC8516"/>.</t>
          <t>Example of first publication:</t>
          <artwork><![CDATA[
=> 0.03 PUT
   Uri-Path: ps
   Uri-Path: data
   Uri-Path: 6578616d706c65
   Content-Format: 110

   {
      "n": "temperature",
      "u": "Cel",
      "t": 1621452122,
      "v": 23.5
   }

<= 2.01 Created
]]></artwork>
          <t>Example of subsequent publication:</t>
          <artwork><![CDATA[
=> 0.03 PUT
   Uri-Path: ps
   Uri-Path: data
   Uri-Path: 6578616d706c65
   Content-Format: 110

   {
      "n": "temperature",
      "u": "Cel",
      "t": 182734122,
      "v": 22.5
   }

<= 2.04 Updated
]]></artwork>
        </section>
        <section anchor="subscribe">
          <name>Subscribe</name>
          <t>A client can subscribe to a topic by sending a CoAP GET request with the Observe set to '0' to subscribe to resource updates. <xref target="RFC7641"/>.</t>
          <t>On success, the broker <bcp14>MUST</bcp14> return 2.05 (Content) notifications with the data.</t>
          <t>If the topic is not yet in the fully created state (see <xref target="topic-lifecycle"/>) the broker <bcp14>SHOULD</bcp14> return a response code 4.04 (Not Found).</t>
          <t>The following response codes are defined for the Subscribe operation:</t>
          <dl>
            <dt>Success:</dt>
            <dd>
              <t>2.05 "Content". Successful subscribe with observe response, current value included in the response.</t>
            </dd>
            <dt>Failure:</dt>
            <dd>
              <t>4.04 "Not Found". Topic does not exist.</t>
            </dd>
          </dl>
          <t>TBD: Do we want to treat max_clients as an error?</t>
          <t>If the 'max_clients' parameter has been reached, the server must treat that as specified in section 4.1 of <xref target="RFC7641"/>. The response <bcp14>MUST NOT</bcp14> include an Observe Option, the absence of which signals to the subscriber that the subscription failed.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.01 GET
   Uri-Path: ps
   Uri-Path: data
   Uri-Path: 6578616d706c65
   Observe: 0

<= 2.05 Content
   Content-Format: 110
   Observe: 10001
   Max-Age: 15

   [...SenML data...]

<= 2.05 Content
   Content-Format: 110
   Observe: 10002
   Max-Age: 15

   [...SenML data...]

<= 2.05 Content
   Content-Format: 110
   Observe: 10003
   Max-Age: 15

   [...SenML data...]
]]></artwork>
        </section>
        <section anchor="unsubscribe">
          <name>Unsubscribe</name>
          <t>A CoAP client can unsubscribe simply by cancelling the observation as described in Section 3.6 of <xref target="RFC7641"/>. The client <bcp14>MUST</bcp14> either use CoAP GET with the Observe Option set to 1 or send a CoAP Reset message in response to a notification.</t>
        </section>
        <section anchor="delete-topic-data">
          <name>Delete topic data resource</name>
          <t>A publisher <bcp14>MAY</bcp14> delete a topic by making a CoAP DELETE request on the 'topic_data' URI.</t>
          <t>On success, the server returns a 2.02 (Deleted) response.</t>
          <t>When a topic_data resource is deleted, the broker <bcp14>SHOULD</bcp14> also delete the 'topic_data' parameter in the topic resource, unsubscribe all subscribers by removing them from the list of observers and return a final 4.04 (Not Found) response as per <xref target="RFC7641"/> Section 3.2. The topic is then set back to the half created state as per <xref target="topic-lifecycle"/>.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.04 DELETE
   Uri-Path: ps
   Uri-Path: data
   Uri-Path: 6578616d706c65

<= 2.02 Deleted
]]></artwork>
        </section>
        <section anchor="read-data">
          <name>Read latest data</name>
          <t>A client can get the latest published topic data by making a GET request to the 'topic_data' URI in the broker. Please note that discovery of the 'topic_data' parameter is a required previous step (see <xref target="topic-get-resource"/>).</t>
          <t>On success, the server <bcp14>MUST</bcp14> return 2.05 (Content) response with the data.</t>
          <t>If the target URI does not match an existing resource or the topic is not in the fully created state (see <xref target="topic-lifecycle"/>), the broker <bcp14>SHOULD</bcp14> return a response code 4.04 (Not Found).</t>
          <t>If the broker can not return the requested content format it <bcp14>MUST</bcp14> return a response code 4.15 (Unsupported Content Format).</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.01 GET
   Uri-Path: ps
   Uri-Path: data
   Uri-Path: 6578616d706c65

<= 2.05 Content
   Content-Format: 110
   Max-Age: 15

   {
      "n": "temperature",
      "u": "Cel",
      "t": 1621452122,
      "v": 23.5
   }
]]></artwork>
        </section>
      </section>
    </section>
    <section anchor="pubsub-parameters">
      <name>CoAP Pubsub Parameters</name>
      <t>This document defines parameters used in the messages exchanged between a client and the broker during the topic creation and configuration process (see <xref target="topic-resource-representation"/>). The table below summarizes them and specifies the CBOR key to use instead of the full descriptive name.</t>
      <t>Note that the media type application/core-pubsub+cbor <bcp14>MUST</bcp14> be used when these parameters are transported in the respective message fields.</t>
      <figure anchor="fig-CoAP-Pubsub-Parameters">
        <name>CoAP Pubsub Parameters</name>
        <artwork align="center"><![CDATA[
+-----------------+-----------+--------------+------------+
| Name            | CBOR Key  | CBOR Type    | Reference  |
|-----------------|-----------|--------------|------------|
| topic_name      | TBD1      | tstr         | [RFC-XXXX] |
| topic_data      | TBD2      | tstr         | [RFC-XXXX] |
| resource_type   | TBD3      | tstr         | [RFC-XXXX] |
| media_type      | TBD4      | tstr (opt)   | [RFC-XXXX] |
| target_attribute| TBD5      | tstr (opt)   | [RFC-XXXX] |
| expiration_date | TBD6      | tstr (opt)   | [RFC-XXXX] |
| max_subscribers | TBD7      | uint (opt)   | [RFC-XXXX] |
+-----------------+-----------+--------------+------------+
]]></artwork>
      </figure>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <!-- TBD: we may take content from prev versions but we have to spend some more time on the implications of the topic-config -->
<t>TBD.</t>
    </section>
    <section anchor="iana">
      <name>IANA Considerations</name>
      <t>TBD.</t>
      <t>This document registers one attribute value in the Resource Type (rt=) registry
established with <xref target="RFC6690"/> and appends to the definition of one CoAP Response Code in the CoRE Parameters Registry.</t>
      <!-- TBD: Redo this section. Need to add the ct and rt similar to the ones below

https://www.ietf.org/archive/id/draft-ietf-ace-oscore-gm-admin-07.html#name-resource-types

https://www.ietf.org/archive/id/draft-ietf-ace-key-groupcomm-16.html#section-11.1

https://www.ietf.org/archive/id/draft-ietf-ace-key-groupcomm-16.html#section-11.2 -->

<section anchor="resource-type-value-coreps">
        <name>Resource Type value 'core.ps'</name>
        <ul spacing="normal">
          <li>Attribute Value: core.ps</li>
          <li>Description: XXX of This document</li>
          <li>Reference: This document</li>
          <li>Notes: None</li>
        </ul>
      </section>
      <section anchor="resource-type-value-corepscoll">
        <name>Resource Type value 'core.ps.coll'</name>
        <ul spacing="normal">
          <li>Attribute Value: core.ps.coll</li>
          <li>Description: XXX of This document</li>
          <li>Reference: This document</li>
          <li>Notes: None</li>
        </ul>
      </section>
      <section anchor="resource-type-value-corepsconf">
        <name>Resource Type value 'core.ps.conf'</name>
        <ul spacing="normal">
          <li>Attribute Value: core.ps.conf</li>
          <li>Description: XXX of This document</li>
          <li>Reference: This document</li>
          <li>Notes: None</li>
        </ul>
      </section>
      <section anchor="resource-type-value-corepsdata">
        <name>Resource Type value 'core.ps.data'</name>
        <ul spacing="normal">
          <li>Attribute Value: core.ps.data</li>
          <li>Description: XXX of This document</li>
          <li>Reference: This document</li>
          <li>Notes: None</li>
        </ul>
      </section>
    </section>
    <section anchor="acks">
      <name>Acknowledgements</name>
      <t>The current version of this document contains a substantial contribution by Klaus Hartke's proposal <xref target="I-D.hartke-t2trg-coral-pubsub"/>, which defines the topic resource model and structure as well as the topic lifecycle and interactions. It also follows a similar architectural design as that provided by Marco Tiloca's <xref target="I-D.ietf-ace-oscore-gm-admin"/>.</t>
      <t>The authors would like to also thank Carsten Bormann, Hannes Tschofenig, Zach Shelby, Mohit Sethi, Peter van der Stok, Tim Kellogg, Anders Eriksson, Goran Selander, Mikko Majanen, and Olaf Bergmann for their valuable contributions and reviews.</t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="RFC6570">
          <front>
            <title>URI Template</title>
            <author fullname="J. Gregorio" initials="J." surname="Gregorio">
              <organization/>
            </author>
            <author fullname="R. Fielding" initials="R." surname="Fielding">
              <organization/>
            </author>
            <author fullname="M. Hadley" initials="M." surname="Hadley">
              <organization/>
            </author>
            <author fullname="M. Nottingham" initials="M." surname="Nottingham">
              <organization/>
            </author>
            <author fullname="D. Orchard" initials="D." surname="Orchard">
              <organization/>
            </author>
            <date month="March" year="2012"/>
            <abstract>
              <t>A URI Template is a compact sequence of characters for describing a range of Uniform Resource Identifiers through variable expansion. This specification defines the URI Template syntax and the process for expanding a URI Template into a URI reference, along with guidelines for the use of URI Templates on the Internet.   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6570"/>
          <seriesInfo name="DOI" value="10.17487/RFC6570"/>
        </reference>
        <reference anchor="RFC6690">
          <front>
            <title>Constrained RESTful Environments (CoRE) Link Format</title>
            <author fullname="Z. Shelby" initials="Z." surname="Shelby">
              <organization/>
            </author>
            <date month="August" year="2012"/>
            <abstract>
              <t>This specification defines Web Linking using a link format for use by constrained web servers to describe hosted resources, their attributes, and other relationships between links.  Based on the HTTP Link Header field defined in RFC 5988, the Constrained RESTful Environments (CoRE) Link Format is carried as a payload and is assigned an Internet media type.  "RESTful" refers to the Representational State Transfer (REST) architecture.  A well-known URI is defined as a default entry point for requesting the links hosted by a server.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6690"/>
          <seriesInfo name="DOI" value="10.17487/RFC6690"/>
        </reference>
        <reference anchor="RFC7252">
          <front>
            <title>The Constrained Application Protocol (CoAP)</title>
            <author fullname="Z. Shelby" initials="Z." surname="Shelby">
              <organization/>
            </author>
            <author fullname="K. Hartke" initials="K." surname="Hartke">
              <organization/>
            </author>
            <author fullname="C. Bormann" initials="C." surname="Bormann">
              <organization/>
            </author>
            <date month="June" year="2014"/>
            <abstract>
              <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
              <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7252"/>
          <seriesInfo name="DOI" value="10.17487/RFC7252"/>
        </reference>
        <reference anchor="RFC7641">
          <front>
            <title>Observing Resources in the Constrained Application Protocol (CoAP)</title>
            <author fullname="K. Hartke" initials="K." surname="Hartke">
              <organization/>
            </author>
            <date month="September" year="2015"/>
            <abstract>
              <t>The Constrained Application Protocol (CoAP) is a RESTful application protocol for constrained nodes and networks.  The state of a resource on a CoAP server can change over time.  This document specifies a simple protocol extension for CoAP that enables CoAP clients to "observe" resources, i.e., to retrieve a representation of a resource and keep this representation updated by the server over a period of time.  The protocol follows a best-effort approach for sending new representations to clients and provides eventual consistency between the state observed by each client and the actual resource state at the server.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7641"/>
          <seriesInfo name="DOI" value="10.17487/RFC7641"/>
        </reference>
        <reference anchor="RFC8516">
          <front>
            <title>"Too Many Requests" Response Code for the Constrained Application Protocol</title>
            <author fullname="A. Keranen" initials="A." surname="Keranen">
              <organization/>
            </author>
            <date month="January" year="2019"/>
            <abstract>
              <t>A Constrained Application Protocol (CoAP) server can experience temporary overload because one or more clients are sending requests to the server at a higher rate than the server is capable or willing to handle.  This document defines a new CoAP response code for a server to indicate that a client should reduce the rate of requests.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8516"/>
          <seriesInfo name="DOI" value="10.17487/RFC8516"/>
        </reference>
        <reference anchor="RFC9167">
          <front>
            <title>Registry Maintenance Notification for the Extensible Provisioning Protocol (EPP)</title>
            <author fullname="T. Sattler" initials="T." surname="Sattler">
              <organization/>
            </author>
            <author fullname="R. Carney" initials="R." surname="Carney">
              <organization/>
            </author>
            <author fullname="J. Kolker" initials="J." surname="Kolker">
              <organization/>
            </author>
            <date month="December" year="2021"/>
            <abstract>
              <t>This document describes an Extensible Provisioning Protocol (EPP) extension called "Registry Maintenance Notification", which is used by EPP servers to notify EPP clients and allow EPP clients to query EPP servers regarding maintenance events.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9167"/>
          <seriesInfo name="DOI" value="10.17487/RFC9167"/>
        </reference>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner">
              <organization/>
            </author>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba">
              <organization/>
            </author>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="RFC5988">
          <front>
            <title>Web Linking</title>
            <author fullname="M. Nottingham" initials="M." surname="Nottingham">
              <organization/>
            </author>
            <date month="October" year="2010"/>
            <abstract>
              <t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5988"/>
          <seriesInfo name="DOI" value="10.17487/RFC5988"/>
        </reference>
        <reference anchor="I-D.hartke-t2trg-coral-pubsub">
          <front>
            <title>Publish/Subscribe over the Constrained Application Protocol (CoAP) using the Constrained RESTful Application Language (CoRAL)</title>
            <author fullname="Klaus Hartke" initials="K." surname="Hartke">
              <organization>Ericsson</organization>
            </author>
            <date day="9" month="May" year="2020"/>
            <abstract>
              <t>   This document explores how the Constrained RESTful Application
   Language (CoRAL) might be used for enabling publish/subscribe-style
   communication over the Constrained Application Protocol (CoAP), which
   allows CoAP nodes with long breaks in connectivity and/or up-time to
   exchange data via a publish/subscribe broker.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-hartke-t2trg-coral-pubsub-01"/>
        </reference>
        <reference anchor="I-D.ietf-ace-oscore-gm-admin">
          <front>
            <title>Admin Interface for the OSCORE Group Manager</title>
            <author fullname="Marco Tiloca" initials="M." surname="Tiloca">
              <organization>RISE AB</organization>
            </author>
            <author fullname="Rikard HÃ¶glund" initials="R." surname="HÃ¶glund">
              <organization>RISE AB</organization>
            </author>
            <author fullname="Peter Van der Stok" initials="P." surname="Van der Stok">
              <organization>Consultant</organization>
            </author>
            <author fullname="Francesca Palombini" initials="F." surname="Palombini">
              <organization>Ericsson AB</organization>
            </author>
            <date day="13" month="March" year="2023"/>
            <abstract>
              <t>   Group communication for CoAP can be secured using Group Object
   Security for Constrained RESTful Environments (Group OSCORE).  A
   Group Manager is responsible to handle the joining of new group
   members, as well as to manage and distribute the group keying
   material.  This document defines a RESTful admin interface at the
   Group Manager, that allows an Administrator entity to create and
   delete OSCORE groups, as well as to retrieve and update their
   configuration.  The ACE framework for Authentication and
   Authorization is used to enforce authentication and authorization of
   the Administrator at the Group Manager.  Protocol-specific transport
   profiles of ACE are used to achieve communication security, proof-of-
   possession and server authentication.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-ace-oscore-gm-admin-08"/>
        </reference>
      </references>
    </references>
  </back>
  <!-- ##markdown-source:
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
/xuxoLouhpIAAA==

-->

</rfc>
