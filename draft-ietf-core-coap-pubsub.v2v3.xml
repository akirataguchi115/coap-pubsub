<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.26 (Ruby 2.6.10) -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-core-coap-pubsub-12" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.16.0 -->
  <front>
    <title abbrev="COREPUBSUB">A publish-subscribe architecture for the Constrained Application Protocol (CoAP)</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-core-coap-pubsub-12"/>
    <author initials="M." surname="Koster" fullname="Michael Koster">
      <organization>Unaffiliated</organization>
      <address>
        <email>michaeljohnkoster@gmail.com</email>
      </address>
    </author>
    <author initials="A." surname="Keranen" fullname="Ari Keranen">
      <organization>Ericsson</organization>
      <address>
        <email>ari.keranen@ericsson.com</email>
      </address>
    </author>
    <author initials="J." surname="Jimenez" fullname="Jaime Jimenez">
      <organization>Ericsson</organization>
      <address>
        <email>jaime@iki.fi</email>
      </address>
    </author>
    <date year="2023" month="March" day="13"/>
    <area>Applications</area>
    <workgroup>CoRE</workgroup>
    <abstract>
      <t>This document describes a publish-subscribe architecture for CoAP that
extends the capabilities of CoAP for supporting nodes with long breaks in
connectivity and/or up-time. The Constrained Application Protocol (CoAP) is used by CoAP clients both to publish and to subscribe via a known topic resource.</t>
    </abstract>
    <note removeInRFC="true">
      <name>About This Document</name>
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-core-coap-pubsub/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        core Working Group mailing list (<eref target="mailto:core@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/core/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/core/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/core-wg/coap-pubsub"/>.</t>
    </note>
  </front>
  <middle>
    <section anchor="introduction">
      <name>Introduction</name>
      <t>The Constrained Application Protocol (CoAP) <xref target="RFC7252"/> supports
machine-to-machine communication across networks of constrained
devices and constrained networks. CoAP uses a request/response model where clients make requests to servers in order to request actions on resources. Depending on the situation the same device may act either as a server, a client, or both.</t>
      <t>One important class of constrained devices includes devices that are intended to run for years from a small battery, or by scavenging energy from their environment. These devices have limited reachability because they spend most of their time in a sleeping state with no network connectivity. Another important class of nodes are devices with limited reachability due to middle-boxes like Network Address Translators (NATs) and firewalls.</t>
      <t>For these nodes, the client/server-oriented architecture of REST can be challenging when interactions are not initiated by the devices themselves. A publish/subscribe-oriented architecture where nodes are separated by a broker and data is exchanged via topics might fit these nodes better.</t>
      <t>This document applies the idea of publish-subscribe to Constrained RESTful Environments. It introduces a broker that allows to create, discover subscribe and publish on topics. The broker enables store-and-forward data exchange between CoAP endpoints, thereby facilitating the communication of nodes with limited reachability, providing simple many-to-many communication, and easing integration with other publish/subscribe systems.</t>
      <section anchor="terminology">
        <name>Terminology</name>
        <t>This specification requires readers to be familiar with all the terms and
concepts that are discussed in <xref target="RFC5988"/> and <xref target="RFC6690"/>. Readers
should also be familiar with the terms and concepts discussed in
<xref target="RFC7252"/> and <xref target="RFC9167"/>. The URI template
format <xref target="RFC6570"/> is used to describe the REST API defined in
this specification.</t>
        <t>This specification makes use of the following terminology:</t>
        <dl>
          <dt>publish-subscribe (pub/sub):</dt>
          <dd>
            <t>A messaging paradigm in which messages are published to a broker, and potential receivers can subscribe to a broker to receive messages. Message producers do not need to know where the message will be eventually sent. The broker matches publications and subscriptions, and delivers publications to subscribed receivers.</t>
          </dd>
          <dt>publishers and subscribers:</dt>
          <dd>
            <t>CoAP clients can act as publishers or as subscribers. Publishers propose topics for creation and send CoAP messages (publications) to the broker on specific topics. Subscribers have an ongoing observation relation (subscription) to a topic. Publishers and subscribers do not need to have any knowledge of each other, but they must know the topic they are publishing and subscribing to.</t>
          </dd>
          <dt>topic collection:</dt>
          <dd>
            <t>A resource collection is a group of related resources that share a common base URI. In this case the the topic collection contains resources of the type "topic resource". CoAP clients can discover and interact with the resources in a collection by sending CoAP requests to the URI of the collection.</t>
          </dd>
          <dt>topic resource:</dt>
          <dd>
            <t>An entry within a topic collection in a broker. Topics are created and configured before any data can be published.  CoAP clients can propose new topics to be created, but it is up to the broker to decide whether and how a topic is created. The broker also decides the URI of each topic resource and of the topic-data resource when hosted at the broker. The creation, configuration, and discovery of topics at a broker are specified in <xref target="topics"/>. Interactions about the topic-data are defined in <xref target="topic-data-interactions"/>.</t>
          </dd>
          <dt>topic-data resource:</dt>
          <dd>
            <t>Topic resources contain a property called "topic-data". The topic-data resource is a CoAP URI used by publishers and subscribers to publish (PUT) and subscribe (GET with Observe) to data (see <xref target="topics"/>).</t>
          </dd>
          <dt>broker:</dt>
          <dd>
            <t>A CoAP server that hosts one or more topic collections containing topic resources. The broker is responsible for the store-and-forward of state update representations when the topic-data URI points to a resource hosted on the broker. The broker is also responsible of handling the topic lifecycle as defined in <xref target="topic-lifecycle"/>. The creation, configuration, and discovery of topics at a broker is specified in <xref target="topics"/>.</t>
          </dd>
        </dl>
        <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      </section>
      <section anchor="coap-publish-subscribe-architecture">
        <name>CoAP Publish-Subscribe Architecture</name>
        <t><xref target="fig-arch"/> shows a simple Publish/Subscribe architecture over CoAP. In it, publishers submit their data over a RESTful interface to a broker-managed resource (topic) and subscribers observe this resource using <xref target="RFC7641"/>. Resource state information is updated between the CoAP clients and the broker via topics. Topics are created by the broker but the initial configuration can be proposed by a client, normally a publisher.</t>
        <t>The broker is responsible for the store-and-forward of state update representations between CoAP clients. Subscribers observing a resource will receive notifications, the delivery of which is done on a best-effort basis.</t>
        <figure anchor="fig-arch">
          <name>Publish-subscribe architecture over CoAP</name>
          <artwork align="center"><![CDATA[
      CoAP                     CoAP                      CoAP
     clients                  server                   clients
   ___________              __________    observe   ____________
  |           |  publish   |          | .--------- |            |
  | publisher | ---------> |          | |--------> | subscriber |
  |___________|            |          | '--------> |____________|
        .                  |          |                   .
        .                  |  broker  |                   .
   ___________             |          |   observe   ____________
  |           |  publish   |          | .--------- |            |
  | publisher | ---------> |          | |--------> | subscriber |
  |___________|            |__________| '--------> |____________|
]]></artwork>
        </figure>
        <t>This document describes two sets of interactions, interactions to configure topics and their lifecycle (see <xref target="topic-resource-interactions"/>) and interactions about the topic data (see <xref target="topic-data-interactions"/>).</t>
        <t>Topic resource interactions are discovery, create, read configuration, update configuration, delete configuration and handle the management of the topics.</t>
        <t>Topic data interactions are publish, subscribe, unsubscribe, read and are oriented on how data is transferred from a publisher to a subscriber.</t>
      </section>
      <section anchor="managing-topics">
        <name>Managing Topics</name>
        <t><xref target="fig-api"/> shows the resources of a Topic Collection that can be managed at the Broker.</t>
        <figure anchor="fig-api">
          <name>Resources of a Broker</name>
          <artwork align="center"><![CDATA[
             ___
   Topic    /   \
 Collection \___/
  Resource       \
                  \____________________
                   \___    \___        \___
                   /   \   /   \  ...  /   \        Topic
                   \___/   \___/       \___/      Resources
]]></artwork>
        </figure>
        <t>The Broker exports a topic-collection resource, with resource type "core.ps.coll" defined in <xref target="iana"/> of this document. The interfaces for the topic-collection resource is defined in <xref target="topic-collection-interactions"/>.</t>
      </section>
    </section>
    <section anchor="topics">
      <name>Pub-Sub Topics</name>
      <t>The configuration side of a "publish/subscribe broker" consists of a collection of topics. These topics as well as the collection itself are exposed by a CoAP server as resources (see <xref target="fig-topic"/>). Each topic has a topic and a topic data resources. The topic resource is used by a client creating or administering a topic. The topic data resource is used by the publishers and the subscribers to a topic.</t>
      <figure anchor="fig-topic">
        <name>Topic and topic-data resources of a topic</name>
        <artwork align="center"><![CDATA[
              ___
    Topic    /   \
  Collection \___/
   Resource       \
                   \___________________________
                    \          \               \
                     \ ......   \ ......        \ ......
                    : \___  :  : \___  :       : \___  :
             Topic  : / + \ :  : / + \ :       : / + \ :
          Resource  : \_|_/ :  : \_|_/ :       : \_|_/ :
                    ....|....  ....|....       ....|....
                    ....|....  ....|....       ....|....
             Topic  :  _|_  :  :  _|_  :  ...  :  _|_  :
              Data  : /   \ :  : /   \ :       : /   \ :
          Resource  : \___/ :  : \___/ :       : \___/ :
                    :.......:  :.......:       :.......:
                   \_________/\_________/ ... \_________/
                     topic 1    topic 2         topic n
]]></artwork>
      </figure>
      <section anchor="collection-representation">
        <name>Collection Representation</name>
        <t>Each topic resource is represented as a link, where the link target is the URI of the topic resource.</t>
        <t>Each topic-data is represented as a link, where the link target is the URI of the topic-data resource. A topic-data link is an entry within the topic resource called 'topic_data' (see <xref target="topic-properties"/>).</t>
        <t>The list can be represented as a Link Format document <xref target="RFC6690"/>. The link to each topic resource specifies the link target attribute 'rt' (Resource Type), with value "core.pubsub.conf" defined in this document.</t>
      </section>
      <section anchor="topic-creation-and-configuration">
        <name>Topic Creation and Configuration</name>
        <t>A CoAP client can create a new topic by submitting an initial configuration for the topic (see <xref target="topic-create"/>). It can also read and update the configuration of existing topics and delete them when they are no longer needed (see <xref target="topic-resource-interactions"/>).</t>
        <t>The configuration of a topic itself consists of a set of properties that can be set by a client or by the broker.</t>
        <section anchor="topic-properties">
          <name>Topic Properties</name>
          <t>The CBOR map includes the following configuration parameters, whose CBOR abbreviations are defined in <xref target="pubsub-parameters"/> of this document.</t>
          <ul spacing="normal">
            <li>'topic_name': A required field used as an application identifier. It encodes the topic name as a CBOR text string. Examples of topic names include human-readable strings (e.g., "room2"), UUIDs, or other values.</li>
            <li>'topic_data': A required field containing the CoAP URI of the topic data resource for subscribing to a pubsub topic. It encodes the URI as a CBOR text string.</li>
            <li>'resource_type': A required field used to indicate the resource type associated with topic resources. It encodes the resource type as a CBOR text string. The value should be "core.ps.conf".</li>
            <li>'media_type': An optional field used to indicate the media type of the topic data resource. It encodes the media type as a CBOR text string (e.g.,"application/json").</li>
            <li>'target_attribute': An optional field used to indicate the attribute or property of the topic_data resource. It encodes the attribute as a CBOR text string. Example attributes include "temperature".</li>
            <li>'expiration_date': An optional field used to indicate the expiration date of the topic. It encodes the expiration date as a CBOR text string. The value should be a date string in ISO 8601 format (e.g., "2023-03-31T23:59:59Z"). The pubsub system can use this field to automatically remove topics that are no longer valid.</li>
            <li>'max_subscribers': An optional field used to indicate the maximum number of subscribers allowed for the topic. It encodes the maximum number as a CBOR integer. If this field is not present, there is no limit to the number of subscribers allowed. The pubsub system can use this field to limit the number of subscribers for a topic.</li>
          </ul>
        </section>
        <section anchor="topic-resource-representation">
          <name>Topic Resource Representation</name>
          <t>A topic is represented as a CBOR map containing the configuration properties of the topic as top-level elements.</t>
          <t>Unless specified otherwise, these are defined in this document and their CBOR abbreviations are defined in <xref target="pubsub-parameters"/>.</t>
          <section anchor="default-values">
            <name>Default Values</name>
            <t>Below are the defined default values for the topic parameters:</t>
            <ul spacing="normal">
              <li>'topic_name': There is no default value. This field is required and must be specified by the client or broker.</li>
              <li>'topic_data': There is no default value. This field is required and must be specified by the client or broker.</li>
              <li>'resource_type': The default value is "core.ps.conf".</li>
              <li>'media_type': The default value is an empty string, indicating that no media type is specified.</li>
              <li>'target_attribute': The default value is an empty string, indicating that no attribute is specified.</li>
              <li>'expiration_date': The default value is an empty string, indicating that no expiration date is specified. If this field is not present, the topic will not expire automatically.</li>
              <li>'max_subscribers': The default value is -1, indicating that there is no limit to the number of subscribers allowed. If this field is not present, the pubsub system will not limit the number of subscribers for the topic.</li>
            </ul>
          </section>
        </section>
      </section>
      <section anchor="discovery">
        <name>Discovery</name>
        <t>Discovery involves that of the Broker, topic collections, topic resources and topic data.</t>
        <section anchor="broker-discovery">
          <name>Broker Discovery</name>
          <!-- TBD: This section explains Broker Discovery, needs more work -->

<t>CoAP clients <bcp14>MAY</bcp14> discover brokers by using CoAP Simple Discovery, via multicast, through a Resource Directory (RD) <xref target="RFC9167"/> or by other means specified in extensions to <xref target="RFC7252"/>. Brokers <bcp14>MAY</bcp14> register with a RD by following the steps on Section 5 of <xref target="RFC9167"/> with the resource type set to "core.ps" as defined in <xref target="iana"/> of this document.</t>
          <t>Brokers <bcp14>SHOULD</bcp14> expose a link to the entry point of the pubsub API at their .well-known/core location <xref target="RFC6690"/>. The specific resource path is left for implementations, examples in this document may use the "/ps" path.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> GET
   Uri-Path: ./well-known/core
   Resource-Type: core.ps


<= 2.05 Content
    </ps>;rt=core.ps;ct=40
]]></artwork>
        </section>
        <section anchor="topic-discovery">
          <name>Topic Discovery</name>
          <t>A Broker can offer a topic discovery entry point to enable clients to find topics of interest. The resource entry point thus represents a collection of related resources as specified in <xref target="RFC6690"/> and is identified by the resource type "core.ps.coll".</t>
          <t>The interactions with topic collections are further defined in <xref target="topic-collection-interactions"/>.</t>
          <t>A topic collection is a group of topic resources that define the properties of the topics themselves (see Section <xref target="topic-resource-representation"/>). Each topic resource is represented as a link to its corresponding resource URI. The list can be represented as a Link Format document <xref target="RFC6690"/>. Topic resources are identified by the resource type "core.ps.conf".</t>
          <t>Within each topic resource there is a set of configuration properties (see Section <xref target="topic-properties"/>). The 'topic_data' property contains the URI of the topic data resource that a CoAP client can subscribe to. Resources exposing resources of the topic data type are expected to use the resource type 'core.ps.data'.</t>
        </section>
      </section>
      <section anchor="topic-collection-interactions">
        <name>Topic Collection Interactions</name>
        <t>These are the interactions that can happen at the topic collection level.</t>
        <section anchor="topic-get-all">
          <name>Retrieving all topics</name>
          <!--
GET to /topic-collection
retrieve all topics
response is link format
-->

<t>A client can request a collection of the topics present in the broker by making a GET request to the collection URI.</t>
          <t>On success, the server returns a 2.05 (Content) response with a representation of the list of all topic resources (see Section <xref target="topic-resource-representation"/>) in the collection.</t>
          <t>Depending on the permission set each client <bcp14>MAY</bcp14> receive a different list of topics that they are authorized to read.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.01 GET
   Uri-Path: ps
   Uri-Path: tc

<= 2.05 Content
   Content-Format: 40 (application/link-format)
   </ps/tc/temperature>;rt="core.ps.conf",
   </ps/tc/humidity>;rt="core.ps.conf"
]]></artwork>
        </section>
        <section anchor="topic-get-properties">
          <name>Getting Topics by Properties</name>
          <!--
FETCH to /topic-collection with filter
retrieve only the topics that match the filter
request is cbor
response is link format
-->

<t>A client can filter a collection of topics by submitting the
representation of a topic filter (see Section <xref target="topic-fetch-resource"/>)  in a FETCH request to the topic collection URI.</t>
          <t>On success, the server returns a 2.05 (Content) response with a
representation of a list of topics in the collection (see
Section <xref target="topic-discovery"/>) that match the filter in CoRE link format <xref target="RFC6690"/>.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.05 FETCH
   Uri-Path: ps
   Uri-Path: tc
   Content-Format: TBD (application/pubsub+cbor)

   {
     "resource_type" : "core.ps.conf",
     "target_attribute" : "temperature"
   }

<= 2.05 Content
   Content-Format: 40 (application/link-format)
   </living_room_sensor>;anchor="coap://[2001:db8::2]/ps/tc/h9392",
   </kitchen_sensor>;anchor="coap://[2001:db8::2]/ps/tc/f3192"

]]></artwork>
        </section>
        <section anchor="topic-create">
          <name>Creating a Topic</name>
          <!--
POST to /topic-collection
create new topic
request is cbor
response (created) is cbor including the link to new topic-config resource
creator proposes topic name but broker approves
-->

<t>A client can add a new topic to a collection of topics by submitting a representation of the initial topic resource (see Section <xref target="topic-resource-representation"/>) in a POST request to the topic collection URI.</t>
          <t>On success, the server returns a 2.01 (Created) response indicating the topic URI of the new topic and the current representation of the topic resource.</t>
          <t>If a topic manager is present in the broker, the topic creation  may require manager approval subject to certain conditions. If the conditions are not fulfilled, the manager <bcp14>MUST</bcp14> respond with a 4.03 (Forbidden) error. The response <bcp14>MUST</bcp14> have Content-Format set to "application/core-pubsub+cbor".</t>
          <t>The broker <bcp14>MUST</bcp14> respond with a 4.00 (Bad Request) error if any received parameter is specified multiple times, invalid or not recognized.</t>
          <t>A CoAP endpoint creating a topic may specify a 'topic_data' URI different than that used by the broker. The broker may then simply forward the observation requests to the 'topic_data' URI.</t>
          <t>If the 'topic_data' is empty the broker will assign a resource for a publisher to publish to.</t>
          <artwork><![CDATA[
=> 0.02 POST
   Uri-Path: ps
   Uri-Path: tc
   Content-Format: TBD2 (application/core-pubsub+cbor)
   TBD (this should be a CBOR map with the mandatory parameters)
   {
     "topic_name" : "living_room_sensor"
     "resource_type" : "core.ps.conf"
   }

<= 2.01 Created
   Location-Path: ps/h9392
   Content-Format: TBD2 (application/core-pubsub+cbor)

   TBD (this should be a CBOR map)
   {
     "topic_name" : "living_room_sensor",
     "topic_data" : "coap://[2001:db8::2]/ps/data/6578616d706c65"
     "resource_type" : "core.ps.conf"
   }
]]></artwork>
        </section>
      </section>
      <section anchor="topic-resource-interactions">
        <name>Topic Resource Interactions</name>
        <t>These are the interactions that can happen at the topic resource level.</t>
        <section anchor="topic-get-resource">
          <name>Getting a topic resource</name>
          <!--
GET to /topic-config
retrieve a topic configuration
response is cbor
-->

<t>A client can read the configuration of a topic by making a GET request to the topic resource URI.</t>
          <t>On success, the server returns a 2.05 (Content) response with a representation of the topic resource. The response has as payload the representation of the topic resource as specified in <xref target="topic-resource-representation"/>.</t>
          <t>If a topic manager (TBD) is present in the broker, retrieving topic information may require manager approval subject to certain conditions (TBD). If the conditions are not fulfilled, the manager <bcp14>MUST</bcp14> respond with a 4.03 (Forbidden) error. The response <bcp14>MUST</bcp14> have Content-Format set to "application/core-pubsub+cbor".</t>
          <t>The response payload is a CBOR map, whose possible entries are specified in <xref target="topic-resource-representation"/> and use the same abbreviations defined in <xref target="pubsub-parameters"/>.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.01 GET
   Uri-Path: ps
   Uri-Path: tc
   Uri-Path: h9392

<= 2.05 Content
   Content-Format: TBD2 (application/core-pubsub+cbor)
   {
      "topic_name" : "living_room_sensor",
      "topic_data" : "coap://[2001:db8::2]/ps/data/6578616d706c65",
      "resource_type": "core.ps.conf",
      "media_type": "application/senml-cbor",
      "target_attribute": "temperature",
      "expiration_date": "",
      "max_subscribers": -1
   }

]]></artwork>
        </section>
        <section anchor="topic-fetch-resource">
          <name>Getting part of a topic resource by filter</name>
          <!--
FETCH to /topic-conf with filter
retrieve only certain parameters from the configuration
request is cbor
response is cbor
-->

<t>A client can read the configuration of a topic by making a FETCH request to the topic resource URI with a filter for specific parameters. This is done in order to retrieve part of the current topic resource.</t>
          <t>The request contains a CBOR map with a configuration filter or 'conf_filter', a CBOR array with CBOR abbreviation. Each element of the array specifies one requested configuration parameter of the current topic resource (see <xref target="topic-resource-representation"/>).</t>
          <t>On success, the server returns a 2.05 (Content) response with a representation of the topic resource. The response has as payload the partial representation of the topic resource as specified in <xref target="topic-resource-representation"/>.</t>
          <t>If a topic manager (TBD) is present in the broker, retrieving topic information may require manager approval subject to certain conditions (TBD). If the conditions are not fulfilled, the manager <bcp14>MUST</bcp14> respond with a 4.03 (Forbidden) error.</t>
          <t>The response payload is a CBOR map, whose possible entries are specified in <xref target="topic-resource-representation"/> and use the same abbreviations defined in <xref target="pubsub-parameters"/>.</t>
          <t>Both request and response <bcp14>MUST</bcp14> have Content-Format set to "application/core-pubsub+cbor".</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.05 FETCH
   Uri-Path: ps
   Uri-Path: tc
   Uri-Path: h9392
   Content-Format: TBD2 (application/core-pubsub+cbor)
   {
     "conf_filter" : [topic_data, media_type]
   }

<= 2.05 Content
   Content-Format: TBD2 (application/core-pubsub+cbor)
   {
     "topic_data" : "coap://[2001:db8::2]/ps/data/6578616d706c65",
     "media_type": "application/senml-cbor"
   }

]]></artwork>
        </section>
        <section anchor="topic-update-resource">
          <name>Updating the Topic Resource</name>
          <!--
PUT to /topic-conf
override the whole configuration
request is cbor
response is cbor
-->

<t>A client can update the configuration of a topic by submitting the representation of the updated topic  (see Section 3.1.3) in a PUT or POST request to the topic URI. Any existing properties in the configuration are overwritten by this update.</t>
          <t>On success, the server returns a 2.04 (Changed) response and the current full resource representation. The broker may chose not to overwrite parameters that are not explicitly modified in the request.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.03 PUT
   Uri-Path: ps
   Uri-Path: tc
   Uri-Path: h9392
   Content-Format: TBD2 (application/core-pubsub+cbor)

   {
      "topic_name" : "living_room_sensor",
      "topic_data" : "coap://[2001:db8::2]/ps/data/6578616d706c65",
      "target_attribute": "temperature",
      "expiration_date": "2023-04-28T23:59:59Z",
      "max_subscribers": 2
   }

<= 2.04 Changed
   Content-Format: TBD2 (application/core-pubsub+cbor)

   TBD (this should be a CBOR map)
   {
      "topic_name" : "living_room_sensor",
      "topic_data" : "coap://[2001:db8::2]/ps/data/6578616d706c65",
      "resource_type": "core.ps.conf",
      "media_type": "application/senml-cbor",
      "target_attribute": "temperature",
      "expiration_date": "2023-04-28T23:59:59Z",
      "max_subscribers": 2
   }
]]></artwork>
        </section>
        <section anchor="topic-delete">
          <name>Deleting a Topic Resource</name>
          <t>A client can delete a topic by making a CoAP DELETE request on the topic resource URI.</t>
          <t>On success, the server returns a 2.02 (Deleted) response.</t>
          <t>When a topic resource is deleted, the broker <bcp14>SHOULD</bcp14> also delete the topic data resource, unsubscribe all subscribers by removing them from the list of observers and returning a final 4.04 (Not Found) response as per <xref target="RFC7641"/> Section 3.2.
Example:</t>
          <artwork><![CDATA[
=> 0.04 DELETE
   Uri-Path: ps
   Uri-Path: tc
   Uri-Path: h9392

<= 2.02 Deleted
]]></artwork>
        </section>
      </section>
      <section anchor="pubsub">
        <name>Publish/Subscribe</name>
        <t>Unless a topic is configured to use a different mechanism, publish/ subscribe is performed as follows: A publisher publishes to a topic by submitting the data in a PUT request to a broker-managed "topic data resource".  This causes a change to the state of that resources. Any subscriber observing the resource <xref target="RFC7641"/> at that time receives a notification about the change to the resource state. Observations are maintained and terminated as specified in <xref target="RFC7641"/>.</t>
        <t>As shown in <xref target="topics"/>, each topic contains two resources: topic resource and topic data. In that section we explained the creation and configuration of the topic resources. This section will explain the management of topic data resources.</t>
        <t>A topic data resource does not exist until some initial data has been published to it.  Before initial data has been published, the topic data resource yields a 4.04 (Not Found) response. If such a "half created" topic is undesired, the creator of the topic can simply immediately publish some initial placeholder data to make the topic "fully created".</t>
        <t>URIs for topic resources are broker-generated. URIs for topic-data <bcp14>MAY</bcp14> also be broker-generated or client-generated. There does not need to be any URI pattern dependence between the URI where the data exists and the URI of the topic resource. Topic resource and data resources might even be hosted on different servers.</t>
        <section anchor="topic-lifecycle">
          <name>Topic Lifecycle</name>
          <t>When a topic is newly created, it is first placed by the server into the HALF CREATED state (see <xref target="fig-life"/>).  In this state, a client can read and update the configuration of the topic and delete the topic. A publisher can publish to the topic data resource.  However, a subscriber cannot yet observe the topic data resource nor read the latest data.</t>
          <figure anchor="fig-life">
            <name>Lifecycle of a Topic</name>
            <artwork align="center"><![CDATA[
                HALF                       FULLY
              CREATED       Delete        CREATED
                ___       Topic Data        ___     Publish
------------>  |   |  <------------------  |   |  ------------.
    Create     |___|  ------------------>  |___|  <-----------'
                     \      Publish      /         Subscribe
                | ^   \       ___       /   | ^
          Read/ | |    '-->  |   |  <--'    | | Read/
         Update | |  Delete  |___|  Delete  | | Update
                '-'  Topic          Topic   '-'
                            DELETED
]]></artwork>
          </figure>
          <t>After a publisher publishes to the topic for the first time, the topic is placed into the FULLY CREATED state. In this state, a client can read, update and delete the topic; a publisher can publish to the topic data resource; and a subscriber can observe the topic data resource.</t>
          <t>When a client deletes a topic resource, the topic is placed into the DELETED state and shortly after removed from the server. In this state, all subscribers are removed from the list of observers of the topic data resource and no further interactions with the topic are possible.</t>
          <t>When a client deletes a topic data, the topic is placed into the HALF CREATED state, where clients can read, update and delete the topic and awaits for a publisher to begin publication.</t>
        </section>
        <section anchor="rate-limit">
          <name>Rate Limiting</name>
          <t>The server hosting a data resource may have to handle a potentially very large number of publishers and subscribers at the same time. This means the server can easily become overwhelmed if it receives too many publications in a short period of time.</t>
          <t>In this situation, if a client is sending publications too fast, the server <bcp14>SHOULD</bcp14> return a 4.29 (Too Many Requests) response <xref target="RFC8516"/>.  As described in <xref target="RFC8516"/>, the Max-Age option <xref target="RFC7252"/> in this response indicates the number of seconds after which the client may retry. The Broker <bcp14>MAY</bcp14> stop publishing messages from the client for the indicated time.</t>
          <t>When a client receives a 4.29 (Too Many Requests) response, it <bcp14>MUST NOT</bcp14> send any new publication requests to the same topic data resource before the time indicated by the Max-Age option has passed.</t>
        </section>
      </section>
      <section anchor="topic-data-interactions">
        <name>Topic Data Interactions</name>
        <t>TBD: intro and image that shows a topic data URI hosted in a different endpoint than the broker</t>
        <section anchor="publish">
          <name>Publish</name>
          <t>A topic must have been created in order to publish data to it (See Section <xref target="topic-create"/>) and be in the half-created state in order to the publish operation to work (see <xref target="topic-lifecycle"/>).</t>
          <t>A client can publish data to a topic by submitting the data in a PUT request to the 'topic_data' URI as indicated in its topic resource property. Please note that the 'topic_data' URI is not the same as the topic URI used for configuring the topic (see <xref target="topic-resource-representation"/>).</t>
          <t>On success, the server returns a 2.04 (Updated) response. However, when data is published to the topic for the first time, the server instead <bcp14>MUST</bcp14> return a 2.01 (Created) response and set the topic in the fully-created state (see <xref target="topic-lifecycle"/>).</t>
          <t>If the request does not have an acceptable content format, the server returns a 4.15 (Unsupported Content Format) response.</t>
          <t>If the client is sending publications too fast, the server returns a
4.29 (Too Many Requests) response <xref target="RFC8516"/>.</t>
          <t>Example of first publication:</t>
          <artwork><![CDATA[
=> 0.03 PUT
   Uri-Path: ps
   Uri-Path: data
   Uri-Path: 6578616d706c65
   Content-Format: 110

   {
      "n": "temperature",
      "u": "Cel",
      "t": 1621452122,
      "v": 23.5
   }

<= 2.01 Created
]]></artwork>
          <t>Example of subsequent publication:</t>
          <artwork><![CDATA[
=> 0.03 PUT
   Uri-Path: ps
   Uri-Path: data
   Uri-Path: 6578616d706c65
   Content-Format: 110

   {
      "n": "temperature",
      "u": "Cel",
      "t": 182734122,
      "v": 22.5
   }

<= 2.04 Updated
]]></artwork>
        </section>
        <section anchor="subscribe">
          <name>Subscribe</name>
          <t>A client can subscribe to a topic by sending a CoAP GET request with the Observe set to '0' to subscribe to resource updates. <xref target="RFC7641"/>.</t>
          <t>On success, the broker <bcp14>MUST</bcp14> return 2.05 (Content) notifications with the data.</t>
          <t>If the topic is not yet in the fully created state (see <xref target="topic-lifecycle"/>) the broker <bcp14>SHOULD</bcp14> return a response code 4.04 (Not Found).</t>
          <t>The following response codes are defined for the Subscribe operation:</t>
          <dl>
            <dt>Success:</dt>
            <dd>
              <t>2.05 "Content". Successful subscribe with observe response, current value included in the response.</t>
            </dd>
            <dt>Failure:</dt>
            <dd>
              <t>4.04 "Not Found". Topic does not exist.</t>
            </dd>
          </dl>
          <t>TBD: Do we want to treat max_clients as an error?</t>
          <t>If the 'max_clients' parameter has been reached, the server must treat that as specified in section 4.1 of <xref target="RFC7641"/>. The response <bcp14>MUST NOT</bcp14> include an Observe Option, the absence of which signals to the subscriber that the subscription failed.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.01 GET
   Uri-Path: ps
   Uri-Path: data
   Uri-Path: 6578616d706c65
   Observe: 0

<= 2.05 Content
   Content-Format: 110
   Observe: 10001
   Max-Age: 15

   [...SenML data...]

<= 2.05 Content
   Content-Format: 110
   Observe: 10002
   Max-Age: 15

   [...SenML data...]

<= 2.05 Content
   Content-Format: 110
   Observe: 10003
   Max-Age: 15

   [...SenML data...]
]]></artwork>
        </section>
        <section anchor="unsubscribe">
          <name>Unsubscribe</name>
          <t>A CoAP client can unsubscribe simply by cancelling the observation as described in Section 3.6 of <xref target="RFC7641"/>. The client <bcp14>MUST</bcp14> either use CoAP GET with the Observe Option set to 1 or send a CoAP Reset message in response to a notification.</t>
        </section>
        <section anchor="delete-topic-data">
          <name>Delete topic data resource</name>
          <t>A publisher <bcp14>MAY</bcp14> delete a topic by making a CoAP DELETE request on the 'topic_data' URI.</t>
          <t>On success, the server returns a 2.02 (Deleted) response.</t>
          <t>When a topic_data resource is deleted, the broker <bcp14>SHOULD</bcp14> also delete the 'topic_data' parameter in the topic resource, unsubscribe all subscribers by removing them from the list of observers and return a final 4.04 (Not Found) response as per <xref target="RFC7641"/> Section 3.2. The topic is then set back to the half created state as per <xref target="topic-lifecycle"/>.</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.04 DELETE
   Uri-Path: ps
   Uri-Path: data
   Uri-Path: 6578616d706c65

<= 2.02 Deleted
]]></artwork>
        </section>
        <section anchor="read-data">
          <name>Read latest data</name>
          <t>A client can get the latest published topic data by making a GET request to the 'topic_data' URI in the broker. Please note that discovery of the 'topic_data' parameter is a required previous step (see <xref target="topic-get-resource"/>).</t>
          <t>On success, the server <bcp14>MUST</bcp14> return 2.05 (Content) response with the data.</t>
          <t>If the target URI does not match an existing resource or the topic is not in the fully created state (see <xref target="topic-lifecycle"/>), the broker <bcp14>SHOULD</bcp14> return a response code 4.04 (Not Found).</t>
          <t>If the broker can not return the requested content format it <bcp14>MUST</bcp14> return a response code 4.15 (Unsupported Content Format).</t>
          <t>Example:</t>
          <artwork><![CDATA[
=> 0.01 GET
   Uri-Path: ps
   Uri-Path: data
   Uri-Path: 6578616d706c65

<= 2.05 Content
   Content-Format: 110
   Max-Age: 15

   {
      "n": "temperature",
      "u": "Cel",
      "t": 1621452122,
      "v": 23.5
   }
]]></artwork>
        </section>
      </section>
    </section>
    <section anchor="pubsub-parameters">
      <name>CoAP Pubsub Parameters</name>
      <t>This document defines parameters used in the messages exchanged between a client and the broker during the topic creation and configuration process (see <xref target="topic-resource-representation"/>). The table below summarizes them and specifies the CBOR key to use instead of the full descriptive name.</t>
      <t>Note that the media type application/core-pubsub+cbor <bcp14>MUST</bcp14> be used when these parameters are transported in the respective message fields.</t>
      <figure anchor="fig-CoAP-Pubsub-Parameters">
        <name>CoAP Pubsub Parameters</name>
        <artwork align="center"><![CDATA[
+-----------------+-----------+--------------+------------+
| Name            | CBOR Key  | CBOR Type    | Reference  |
|-----------------|-----------|--------------|------------|
| topic_name      | TBD1      | tstr         | [RFC-XXXX] |
| topic_data      | TBD2      | tstr         | [RFC-XXXX] |
| resource_type   | TBD3      | tstr         | [RFC-XXXX] |
| media_type      | TBD4      | tstr (opt)   | [RFC-XXXX] |
| target_attribute| TBD5      | tstr (opt)   | [RFC-XXXX] |
| expiration_date | TBD6      | tstr (opt)   | [RFC-XXXX] |
| max_subscribers | TBD7      | uint (opt)   | [RFC-XXXX] |
+-----------------+-----------+--------------+------------+
]]></artwork>
      </figure>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <!-- TBD: we may take content from prev versions but we have to spend some more time on the implications of the topic-config -->
<t>TBD.</t>
    </section>
    <section anchor="iana">
      <name>IANA Considerations</name>
      <t>TBD.</t>
      <t>This document registers one attribute value in the Resource Type (rt=) registry
established with <xref target="RFC6690"/> and appends to the definition of one CoAP Response Code in the CoRE Parameters Registry.</t>
      <!-- TBD: Redo this section. Need to add the ct and rt similar to the ones below

https://www.ietf.org/archive/id/draft-ietf-ace-oscore-gm-admin-07.html#name-resource-types

https://www.ietf.org/archive/id/draft-ietf-ace-key-groupcomm-16.html#section-11.1

https://www.ietf.org/archive/id/draft-ietf-ace-key-groupcomm-16.html#section-11.2 -->

<section anchor="resource-type-value-coreps">
        <name>Resource Type value 'core.ps'</name>
        <ul spacing="normal">
          <li>Attribute Value: core.ps</li>
          <li>Description: XXX of This document</li>
          <li>Reference: This document</li>
          <li>Notes: None</li>
        </ul>
      </section>
      <section anchor="resource-type-value-corepscoll">
        <name>Resource Type value 'core.ps.coll'</name>
        <ul spacing="normal">
          <li>Attribute Value: core.ps.coll</li>
          <li>Description: XXX of This document</li>
          <li>Reference: This document</li>
          <li>Notes: None</li>
        </ul>
      </section>
      <section anchor="resource-type-value-corepsconf">
        <name>Resource Type value 'core.ps.conf'</name>
        <ul spacing="normal">
          <li>Attribute Value: core.ps.conf</li>
          <li>Description: XXX of This document</li>
          <li>Reference: This document</li>
          <li>Notes: None</li>
        </ul>
      </section>
      <section anchor="resource-type-value-corepsdata">
        <name>Resource Type value 'core.ps.data'</name>
        <ul spacing="normal">
          <li>Attribute Value: core.ps.data</li>
          <li>Description: XXX of This document</li>
          <li>Reference: This document</li>
          <li>Notes: None</li>
        </ul>
      </section>
    </section>
    <section anchor="acknowledgements">
      <name>Acknowledgements</name>
      <t>The current version of this document contains a substantial contribution by Klaus Hartke's proposal <xref target="I-D.hartke-t2trg-coral-pubsub"/>, which defines the topic resource model and structure as well as the topic lifecycle and interactions. It also follows a similar architectural design as that provided by Marco Tiloca's <xref target="I-D.ietf-ace-oscore-gm-admin"/>.</t>
      <t>The authors would like to also thank Carsten Bormann, Hannes Tschofenig, Zach Shelby, Mohit Sethi, Peter van der Stok, Tim Kellogg, Anders Eriksson, Goran Selander, Mikko Majanen, and Olaf Bergmann for their valuable contributions and reviews.</t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="RFC6570">
          <front>
            <title>URI Template</title>
            <author fullname="J. Gregorio" initials="J." surname="Gregorio">
              <organization/>
            </author>
            <author fullname="R. Fielding" initials="R." surname="Fielding">
              <organization/>
            </author>
            <author fullname="M. Hadley" initials="M." surname="Hadley">
              <organization/>
            </author>
            <author fullname="M. Nottingham" initials="M." surname="Nottingham">
              <organization/>
            </author>
            <author fullname="D. Orchard" initials="D." surname="Orchard">
              <organization/>
            </author>
            <date month="March" year="2012"/>
            <abstract>
              <t>A URI Template is a compact sequence of characters for describing a range of Uniform Resource Identifiers through variable expansion. This specification defines the URI Template syntax and the process for expanding a URI Template into a URI reference, along with guidelines for the use of URI Templates on the Internet.   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6570"/>
          <seriesInfo name="DOI" value="10.17487/RFC6570"/>
        </reference>
        <reference anchor="RFC6690">
          <front>
            <title>Constrained RESTful Environments (CoRE) Link Format</title>
            <author fullname="Z. Shelby" initials="Z." surname="Shelby">
              <organization/>
            </author>
            <date month="August" year="2012"/>
            <abstract>
              <t>This specification defines Web Linking using a link format for use by constrained web servers to describe hosted resources, their attributes, and other relationships between links.  Based on the HTTP Link Header field defined in RFC 5988, the Constrained RESTful Environments (CoRE) Link Format is carried as a payload and is assigned an Internet media type.  "RESTful" refers to the Representational State Transfer (REST) architecture.  A well-known URI is defined as a default entry point for requesting the links hosted by a server.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6690"/>
          <seriesInfo name="DOI" value="10.17487/RFC6690"/>
        </reference>
        <reference anchor="RFC7252">
          <front>
            <title>The Constrained Application Protocol (CoAP)</title>
            <author fullname="Z. Shelby" initials="Z." surname="Shelby">
              <organization/>
            </author>
            <author fullname="K. Hartke" initials="K." surname="Hartke">
              <organization/>
            </author>
            <author fullname="C. Bormann" initials="C." surname="Bormann">
              <organization/>
            </author>
            <date month="June" year="2014"/>
            <abstract>
              <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
              <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7252"/>
          <seriesInfo name="DOI" value="10.17487/RFC7252"/>
        </reference>
        <reference anchor="RFC7641">
          <front>
            <title>Observing Resources in the Constrained Application Protocol (CoAP)</title>
            <author fullname="K. Hartke" initials="K." surname="Hartke">
              <organization/>
            </author>
            <date month="September" year="2015"/>
            <abstract>
              <t>The Constrained Application Protocol (CoAP) is a RESTful application protocol for constrained nodes and networks.  The state of a resource on a CoAP server can change over time.  This document specifies a simple protocol extension for CoAP that enables CoAP clients to "observe" resources, i.e., to retrieve a representation of a resource and keep this representation updated by the server over a period of time.  The protocol follows a best-effort approach for sending new representations to clients and provides eventual consistency between the state observed by each client and the actual resource state at the server.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7641"/>
          <seriesInfo name="DOI" value="10.17487/RFC7641"/>
        </reference>
        <reference anchor="RFC8516">
          <front>
            <title>"Too Many Requests" Response Code for the Constrained Application Protocol</title>
            <author fullname="A. Keranen" initials="A." surname="Keranen">
              <organization/>
            </author>
            <date month="January" year="2019"/>
            <abstract>
              <t>A Constrained Application Protocol (CoAP) server can experience temporary overload because one or more clients are sending requests to the server at a higher rate than the server is capable or willing to handle.  This document defines a new CoAP response code for a server to indicate that a client should reduce the rate of requests.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8516"/>
          <seriesInfo name="DOI" value="10.17487/RFC8516"/>
        </reference>
        <reference anchor="RFC9167">
          <front>
            <title>Registry Maintenance Notification for the Extensible Provisioning Protocol (EPP)</title>
            <author fullname="T. Sattler" initials="T." surname="Sattler">
              <organization/>
            </author>
            <author fullname="R. Carney" initials="R." surname="Carney">
              <organization/>
            </author>
            <author fullname="J. Kolker" initials="J." surname="Kolker">
              <organization/>
            </author>
            <date month="December" year="2021"/>
            <abstract>
              <t>This document describes an Extensible Provisioning Protocol (EPP) extension called "Registry Maintenance Notification", which is used by EPP servers to notify EPP clients and allow EPP clients to query EPP servers regarding maintenance events.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9167"/>
          <seriesInfo name="DOI" value="10.17487/RFC9167"/>
        </reference>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner">
              <organization/>
            </author>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba">
              <organization/>
            </author>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="RFC5988">
          <front>
            <title>Web Linking</title>
            <author fullname="M. Nottingham" initials="M." surname="Nottingham">
              <organization/>
            </author>
            <date month="October" year="2010"/>
            <abstract>
              <t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5988"/>
          <seriesInfo name="DOI" value="10.17487/RFC5988"/>
        </reference>
        <reference anchor="I-D.hartke-t2trg-coral-pubsub">
          <front>
            <title>Publish/Subscribe over the Constrained Application Protocol (CoAP) using the Constrained RESTful Application Language (CoRAL)</title>
            <author fullname="Klaus Hartke" initials="K." surname="Hartke">
              <organization>Ericsson</organization>
            </author>
            <date day="9" month="May" year="2020"/>
            <abstract>
              <t>   This document explores how the Constrained RESTful Application
   Language (CoRAL) might be used for enabling publish/subscribe-style
   communication over the Constrained Application Protocol (CoAP), which
   allows CoAP nodes with long breaks in connectivity and/or up-time to
   exchange data via a publish/subscribe broker.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-hartke-t2trg-coral-pubsub-01"/>
        </reference>
        <reference anchor="I-D.ietf-ace-oscore-gm-admin">
          <front>
            <title>Admin Interface for the OSCORE Group Manager</title>
            <author fullname="Marco Tiloca" initials="M." surname="Tiloca">
              <organization>RISE AB</organization>
            </author>
            <author fullname="Rikard HÃ¶glund" initials="R." surname="HÃ¶glund">
              <organization>RISE AB</organization>
            </author>
            <author fullname="Peter Van der Stok" initials="P." surname="Van der Stok">
              <organization>Consultant</organization>
            </author>
            <author fullname="Francesca Palombini" initials="F." surname="Palombini">
              <organization>Ericsson AB</organization>
            </author>
            <date day="13" month="March" year="2023"/>
            <abstract>
              <t>   Group communication for CoAP can be secured using Group Object
   Security for Constrained RESTful Environments (Group OSCORE).  A
   Group Manager is responsible to handle the joining of new group
   members, as well as to manage and distribute the group keying
   material.  This document defines a RESTful admin interface at the
   Group Manager, that allows an Administrator entity to create and
   delete OSCORE groups, as well as to retrieve and update their
   configuration.  The ACE framework for Authentication and
   Authorization is used to enforce authentication and authorization of
   the Administrator at the Group Manager.  Protocol-specific transport
   profiles of ACE are used to achieve communication security, proof-of-
   possession and server authentication.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-ace-oscore-gm-admin-08"/>
        </reference>
      </references>
    </references>
  </back>
  <!-- ##markdown-source:
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
k6/dFYnfIFe1H4VA5xY8cmjpEe6ZWBryum/gWDS/4yRO274Lb7NrGYXh3XK3
4JK5SJ6K2C0xd7RYVVRBKtRUgnNLtxl+t+hSYQpzhxrF9afprKOR+nweHmW5
SbqzxBQUEBTl62sUry5SvL/mJXMfuzJLfPCT2nvGIaeUeyagdS2tHesOW/A3
EPBfIBKbAvDvZ5eFxGjvu8MyYu9cCqNJjfETntsXH6FSXPmZj6vKKarW0+ju
fzfBaOtNbNwTN206Um5JoFiWBVLPvX0tzEvJmTCmCpvVarFIsGwK14pit0ZQ
1p0S9/CaSEkAMm4Sc7E2Zo2yjgCSHO9zS8hh+iZwLvlVi29JIGRkHmsGoamB
XgV5pXTMEq8pEoz2LAIUGu7WbK502Lwc7ptWnPObNZ+bX7+JbtQbdIR5fzcM
nr8AeMxnLM/GP51o8nvi0c2b6CZu/t2s+dz8Cm2Vy5M044IJMzSf66ouvSn9
BHI0/r/w97Nybac2onzDmZz3ahskTJq2j+7X1mVReuPuB223iiXw9K45N3Iq
qe3j+7VtpFnyuE/u17aRccltn5q2K/Rdr2n7a/CqK0aMLClmlhR7LEmubupm
WLfc3bSBKhUwlvoKmS9eYMQgqvzimJccLqsx8ccKGtTyUKhjoIyLS2L5jktt
o2oVptlwOhHf7YtRCdGK0cawno/gWgypF4J5+zA2XcF0fPDmoDE7YMFULjKS
l0LeawpZ8rkrVyPW+AxoOJsJS4S5Vdbfb0vD8ioCoZoYVYo0Cr8sDkcs8dj2
1BrOxO5Tk+aCwxozhcXuCxS7qbkM9OTIFycnMurAh/mJnhYSyZNiWeqN5DRh
ARTyzsqpmhpttjRLbDyiQMFDfDyK5nW9rEY7O5eXl4NU17NBUZ7t0KV+F3on
ne5My2RWx/hLnIBoKCrivWeLmC5sinefDub1IttAFuMECBJv9cV9g7CIqXQh
XgIfD59wz7K8eDgcDB++yz2u0Epqtb/fjAqmhN0mFt89sHhCxaa9Upq/A2Xd
ukBGCigbNznAOXzJ8vVR+zcUe9UI/sn1nbOhEpO3Tone+J+YVz67a1757Lef
F1ket86LtNGHn5c6mGAx1kxPOe+0kptVjI+SOWOrpK1/MhWlSp3k5oYZnj82
ArPtL1kCBtOPwLzP9WYlJZPgvevr4/hwMKfncb1Xl2fANsskE5UJY+vs3TNK
aNumx+M2OmO1ri5XfL1n46Y5buFdTN64TJMK95NjQVK4VWI5kXdtaEJ6INVs
kdM/eKQynXJk+jW8WajTFOvwwhp5aevYkb2enKv6wXTpIEmWnrPfB+eCMeRz
9SIpKzwW9RwtiTzvAxRzhMRpNZkXM52nZ331r5jj/H6us/FVX70uYL4gDGGj
+uodGbAXdBAC7La6OO/DFBegz8E6z6DpQT5Fzn1UpudVhc7VPwH80Q2WJfgL
dJeen2Pc65ckN/eLv82SmXquyzOckHGWp3wliw3jme03vpKLVF+CqvrfdVPa
JHuSAAA=

-->

</rfc>
